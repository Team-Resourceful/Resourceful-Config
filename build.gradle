plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
    id "com.teamresourceful.resourcefulgradle"
}

architectury {
    minecraft = mc_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:$mc_version"
        mappings loom.officialMojangMappings()
    }

    repositories {
        maven { url "https://maven.teamresourceful.com/repository/maven-public/"}
        maven { url "https://maven.neoforged.net/releases/" }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = libs.versions.mod.version.get()
    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }

    publishing {
        if (project != rootProject) {
            publications {
                mavenJava(MavenPublication) {
                    artifactId = "$archives_base_name-${project.name}-$mc_version"
                    from components.java

                    pom {
                        name = 'Resourceful Config'
                        description = 'Crossplatform config library for Team Resourceful mods and more.'
                        url = 'https://github.com/Team-Resourceful/Resouceful-Config'

                        scm {
                            connection = 'git:https://github.com/Team-Resourceful/Resouceful-Config.git'
                            developerConnection = 'git:https://github.com/Team-Resourceful/Resouceful-Config.git'
                            url = 'https://github.com/Team-Resourceful/Resouceful-Config'
                        }

                        licenses {
                            license {
                                name = 'MIT'
                            }
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                url = nightly.toBoolean()
                        ? "https://nexus.resourcefulbees.com/repository/maven-nightly/"
                        : "https://nexus.resourcefulbees.com/repository/maven-releases/"
                credentials {
                    def ENV = System.getenv()
                    username ENV.MAVEN_USER
                    password ENV.MAVEN_PASS
                }
            }
        }
    }
}

resourcefulGradle {
    templates {
        //I have no idea how to get rid of the warnings in idea. switching from interface to abstract
        //gets rid of *some* warnings. so we just have to live with them as they are now since that's how
        //the gradle docs say to make a plugin with nested DSL

        readme {
            source = file("templates/README.md.template")
            injectedValues = [
                    "version"            : libs.versions.mod.version.get(),
                    "mc_version"         : mc_version
            ]
        }
        discordEmbed {
            var fabricLink = System.getenv("FABRIC_RELEASE_URL")
            var forgeLink = System.getenv("FORGE_RELEASE_URL")

            injectedValues = [
                    "version"      : libs.versions.mod.version.get(),
                    "mc_version"   : mc_version,
                    "forge_version": forge_version,
                    "fabric_version": fabric_loader_version,
                    "fabric_link": fabricLink,
                    "forge_link": forgeLink
            ]

            def template = nightly.toBoolean() ? "nightly_embed.json.template" : "release_embed.json.template"
            source = file("templates/$template")
        }
    }
}
